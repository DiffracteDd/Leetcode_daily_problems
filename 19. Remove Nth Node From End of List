/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution 
{
    public int count(ListNode head)
    {
        int c=0;
        while(head!=null)
        {
            head=head.next;
            c++;
        }
        return c;
    }
    public ListNode removeNthFromEnd(ListNode head, int n) 
    {
        int c = count(head);
        int k = c-n;
        
        // Check if the node to be removed is the first node
        if (k == 0) {
            return head.next;
        }
        
        ListNode temp = head;
        for(int i = 1; i < k; i++)
        {
            temp = temp.next;
        }    
        temp.next = temp.next.next;
        return head;
    }
}
